BiocManager::install('monocle')
library(monocle)
library(Seurat)
library(dplyr)
library(patchwork)
# start monocle
Idents(mtx) <- 'celltype'
DimPlot(mtx,group.by = 'celltype')

emtx <- subset(mtx,idents=c('Normal_Epithelium','Tumour_Epithelium_and_Vascular',"Foetal_Epithelium_and_Vascular"))
Idents(emtx) <- 'celltype'
data = as(as.matrix(emtx@assays$RNA@layers$data), "sparseMatrix")
pd = new("AnnotatedDataFrame", data = emtx@meta.data)
pData <- pd@data
fData = data.frame(gene_short_name = row.names(emtx@assays$RNA), row.names = row.names(emtx@assays$RNA))
fd = new("AnnotatedDataFrame", data = fData)
st_new = newCellDataSet(data, phenoData = pd, featureData = fd, 
                        lowerDetectionLimit = 0.5, expressionFamily = negbinomial.size()) # igraph 

#estimate SizeFactor and  Dispersions
st_new <- estimateSizeFactors(st_new)
st_new <- estimateDispersions(st_new)

st_new <- detectGenes(st_new, min_expr = 0.1)
print(head(fData(st_new)))
expressed_genes <- row.names(subset(fData(st_new),
                                    num_cells_expressed >= 10))


## Constructing Single Cell Trajectories
# choose genes
diff_test_res <- differentialGeneTest(st_new[expressed_genes,],fullModelFormulaStr = "~clusters)")
ordering_genes <- row.names(subset(diff_test_res, qval < 0.01))
st_new <- setOrderingFilter(st_new, ordering_genes)
st_new <- reduceDimension(st_new, method = 'DDRTree',max_components = 3) 
st_new <- orderCells(st_new,root_state = 3) 


# plot
plot_cell_trajectory(st_new,cell_size = 1,color_by = "State")+theme_bw()+
  theme(panel.grid = element_blank()) +
  theme(plot.title = element_text(hjust = 0.5,size = 20, face = "bold"),axis.text=element_text(size=12,face = "bold"),
                                             axis.title.x=element_text(size=14),axis.title.y=element_text(size=14))
plot_cell_trajectory(st_new,cell_size = 1,color_by = "celltype")+
  scale_color_manual(values = c("#B5CE4E","#52AADC", "#EC6E66"))+theme_bw()+
  theme(panel.grid = element_blank()) +
  theme(plot.title = element_text(hjust = 0.5,size = 20, face = "bold"),axis.text=element_text(size=12,face = "bold"),
                                             axis.title.x=element_text(size=14),axis.title.y=element_text(size=14))


# Extracting gene expression and pseudotime data
gene_expr <- data.frame(
  pseudotime = st_new$Pseudotime, 
  expression = exprs(st_new)["PHYHD1", ]  
)
library(ggplot2)
ggplot(gene_expr, aes(x = pseudotime, y = expression)) +
  geom_smooth(method = "loess", se = TRUE, color = "#416080", linetype = "dashed") + 
  labs(x = "Pseudotime", y = "Expression")+theme_test()

# 3d plot
# Load plot_ly
library(plotly)
library(Seurat)
yourseuratobject <- emtx

# Re-run UMAPs that you have accurate calculations for all UMAP(s)
yourseuratobject <- RunUMAP(st_new,
                            dims = 1:3,
                            n.components = 3L)
UMAP_1 <- yourseuratobject[["umap"]]@cell.embeddings[,1]
UMAP_2 <- yourseuratobject[["umap"]]@cell.embeddings[,2]
UMAP_3 <- yourseuratobject[["umap"]]@cell.embeddings[,3]
Embeddings(object = yourseuratobject, reduction = "umap")
plot.data <- FetchData(object = yourseuratobject, vars = c("umap_1", "umap_2", "umap_3", "celltype"))
plot.data$label <- paste(rownames(plot.data))
plot_ly(data = plot.data, 
        x = ~UMAP_1, y = ~UMAP_2, z = ~UMAP_3, 
        color = ~celltype, 
        colors = c("lightseagreen","gray50","darkgreen", "red4","red","turquoise4",
                   "black","yellow4", "royalblue1", "lightcyan3","peachpuff3", "khaki3",
                   "gray20","orange2", "royalblue4", "yellow3","gray80",
                   "darkorchid1", "lawngreen", "plum2", "darkmagenta"),
        type = "scatter3d", 
        mode = "markers", size=1,
        marker = list(size = 2, width=2), # controls size of points
        text=~label, #This is that extra column we made earlier for which we will use for cell ID
        hoverinfo="text")

